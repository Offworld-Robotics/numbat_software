<launch>

  <!-- Create a static transform for each ar tag -->
    <node pkg="tf" type="static_transform_publisher" name="marker2" args="2 1 0 0 0 0 odom /marker2 100">
    </node>

  <!-- Setup the video stream from the camera -->
   <arg name="camera_name" default="camera" />
   <!-- video_stream_provider can be a number as a video device or a url of a video stream -->
   <arg name="video_stream_provider" default="/dev/video0" />
   <!-- frames per second to query the camera for -->
   <arg name="fps" default="60" />
   <!-- frame_id for the camera -->
   <arg name="frame_id" default="camera_link" />
   <!-- By default, calibrations are stored to file://${ROS_HOME}/camera_info/${NAME}.yaml
   To use your own fill this arg with the corresponding url, e.g.:
   "file:///$(find your_camera_package)/config/your_camera.yaml" -->
    <arg name="camera_info_url" default="file:///home/ros/Desktop/webcamCalibration.yaml" />
   <!-- flip the image horizontally (mirror it) -->
   <arg name="flip_horizontal" default="false" />
   <!-- flip the image vertically -->
   <arg name="flip_vertical" default="false" />
    <!-- force width and height, 0 means no forcing -->
    <arg name="width" default="0"/>
    <arg name="height" default="0"/>
    <arg name="buffer_queue_size" default="1"/>
   <!-- if show a image_view window subscribed to the generated stream -->
 <arg name="visualize" default="true"/>

   
    <!-- images will be published at /camera_name/image with the image transports plugins (e.g.: compressed) installed -->
    <group ns="$(arg camera_name)">
     <node pkg="video_stream_opencv" type="video_stream" name="$(arg camera_name)_stream" output="screen"> 
      <remap from="camera" to="image_raw" />
      <param name="camera_name" type="string" value="$(arg camera_name)" />
         <param name="video_stream_provider" type="string" value="$(arg video_stream_provider)" />
         <param name="fps" type="int" value="$(arg fps)" />
         <param name="frame_id" type="string" value="$(arg frame_id)" />
         <param name="camera_info_url" type="string" value="$(arg camera_info_url)" />
         <param name="buffer_queue_size" type="int" value="$(arg buffer_queue_size)" />
         <param name="flip_horizontal" type="bool" value="$(arg flip_horizontal)" />
         <param name="flip_vertical" type="bool" value="$(arg flip_vertical)" />
         <param name="width" type="int" value="$(arg width)" />
         <param name="height" type="int" value="$(arg height)" />
     </node>
     

 </group>

 
 
 
  <!-- Set up the ar_track_alvar package to scan for ar tags -->
    <arg name="marker_size" default="5.6" />
    <arg name="max_new_marker_error" default="0.10" />
    <arg name="max_track_error" default="0.25" />
    <arg name="cam_image_topic" default="/camera/image_raw" />
    <arg name="cam_info_topic" default="/camera/camera_info" />
    <arg name="output_frame" default="/camera_link" />
    

    <node name="ar_track_alvar" pkg="ar_track_alvar" type="individualMarkersNoKinect" respawn="false" output="screen">
      <param name="marker_size"           type="double" value="$(arg marker_size)" />
      <param name="max_new_marker_error"  type="double" value="$(arg max_new_marker_error)" />
      <param name="max_track_error"       type="double" value="$(arg max_track_error)" />
      <param name="output_frame"          type="string" value="$(arg output_frame)" />

      <remap from="camera_image"  to="$(arg cam_image_topic)" />
      <remap from="camera_info"   to="$(arg cam_info_topic)" />
  </node>

  <node pkg="owr_positioning" type="artags" name="artags" output="screen"/> 
   
</launch>
