<launch>
  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find owr_bluetounge2_tf)/config/bluetounge_control.yaml" command="load"/>
  <include
    file="$(find gazebo_ros)/launch/empty_world.launch" />
<param
    name="robot_description"
    command="$(find xacro)/xacro '$(find owr_bluetounge2_tf)/robots/owr_bluetounge2_tf.URDF'" />
  <!--<node
    name="tf_footprint_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0 0 0 0 0 0 base_link base_footprint 40" />-->
  <node
    name="spawn_model"
    pkg="gazebo_ros"
    type="spawn_model"
    args="-param robot_description -urdf  -model owr_bluetounge2_tf"
    output="screen" />
  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/" 
    args="joint_state_controller laser_tilt_joint_controller front_left_wheel_axel_controller back_left_wheel_axel_controller front_right_wheel_axel_controller  back_right_wheel_axel_controller front_left_swerve_controller back_left_swerve_controller front_right_swerve_controller  back_right_swerve_controller arm_base_rotate_controller "/>
  
  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
<!--     <remap from="/joint_states" to="/rrbot/joint_states" /> -->
  </node>
<!--  <include
    file="$(find pr2_controller_manager)/controller_manager.launch" />-->
  <!--<node
    name="fake_joint_calibration"
    pkg="rostopic"
    type="rostopic"
    args="pub /calibrated std_msgs/Bool true" />-->
</launch>
