#!/usr/bin/env python

import rospy
import rostopic

class RosTopicEchoTimeout:

    def __init__(self):
        rospy.init_node('rostopic_echo_timeout', anonymous=True)

        self.topic = rospy.get_param('~topic')
        timeout = rospy.get_param('~timeout', 1.)


        msg_class, real_topic, msg_eval = rostopic.get_topic_class(self.topic)

        if msg_class == None:
            exit(1)

        self.msg = None
        self.sub = rospy.Subscriber(self.topic, msg_class, self.callback)

        rospy.Timer(rospy.Duration(timeout),  self.timeout, oneshot=True)
        rospy.spin()

        if self.msg == None:
          exit(1)
        
        print self.msg
         
    def timeout(self,event):
        rospy.signal_shutdown('Timeout')

    def callback(self, msg):
        self.msg = msg
        rospy.signal_shutdown('Message received.')

if __name__ == '__main__':

    RosTopicEchoTimeout()

